// Provisionning

/** Create conversation */
zpServiceGda.gda_createTable({
	name: NOTIFICATION_TABLE,
	columns: [{
		map: false,
		name: COLUMN_NOTIFICATION_CREATED_AT,
		type: GdaDataType_LONG
	}, {
		map: false,
		name: COLUMN_NOTIFICATION_TYPE,
		type: GdaDataType_STRING
	}, {
		map: false,
		name: COLUMN_NOTIFICATION_EMITTER,
		type: GdaDataType_STRING
	}, {
		map: false,
		name: COLUMN_NOTIFICATION_VALUE,
		type: GdaDataType_OBJECT
	}]
});

/** Register triggers */
zpRecipeUtils::zpServiceTrigger.trigger_addListener({
	deploymentId: zpRecipeUtils::zpServiceImplMacro,
	parameter : {
		name: #core_notification__onNotifyUserCallback,
		parameters: TriggerCallbackField_data
	},
	trigger : {
		event: EVENT__NOTIFY_USER,
		name: #core_notification__onNotifyUserCallback
	},
	verb: Verb_macro_func
});

/** Register triggers for in app notification */
zpRecipeUtils::zpServiceTrigger.trigger_addListener({
	deploymentId: zpRecipeUtils::zpServiceImplMacro,
	parameter : {
		name: #core_notification__onDispatchNotificationInApp,
		parameters: TriggerCallbackField_data
	},
	trigger : {
		event: EVENT__NOTIFICATION_DISPATCH_IN_APP,
		name: #core_notification__onDispatchNotificationInApp
	},
	verb: Verb_macro_func
});