macroscript updateConversationMessage(
	/** the identifier of the conversation */
	@NotNull string id,
	@NotNull string owner,
	@NotNull object originalMessage,
	string newValue = null,
	object newMetadata = null
) {
	var response = null;
	
	var originalData = originalMessage.data;
	/** Stored data structure */
	var data = { 
		author: originalData.author, 
		owner: originalData.owner, 
		type: originalData.type, 
		value: newValue ?: originalData.value, 
		date: originalData.date, 
		raw: originalData.data, 
		metadata: newMetadata
	};
	
	/** Push message on the stack with expected data structure */
	var message = zpServiceStack.update({ guid: originalMessage.guid, data, owner, stack: id });

//	/** TODO: Execute all registered macros */
//	sudo zpRecipeUtils::GLOBAL_OWNER zpRecipeUtils::zpServiceTrigger.trigger({
//		event: EVENT__ADD_CONVERSATION_MESSAGE,
//		data: { conversationId, owner, message }
//	});

	var messages = zpServiceStack.list({ owner, stack: id });
	
	/** Create conversation */
	response = sudo owner call zpRecipeUtils::getTargets({ id }) hardFail;
	/** Destructure response properties */
	var targets = response.result.value;

} broadcast(targets) { id, message, targets } on channel __selfName
