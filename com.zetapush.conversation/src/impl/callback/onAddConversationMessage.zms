macroscript onAddConversationMessage(
	@NotNull string id,
	@NotNull string owner,
	@NotNull map message 
) {
	var response = null;
	var author = message.data.author;
	// TODO Avoid sudo with a correct grants policy
	response = sudo owner call zpRecipeGroup::getGroupByService({
		id, zpService: zpServiceGroups
	}) hardFail;
	/** Destructure response properties */
	var group = response.result.group;
	for member in group.members {
		// TODO Add grants
		sudo member.userKey zpServiceGda.put({
			column: COLUMN_HISTORY_LATEST,
			data: message,
			key: id,
			table: HISTORY_TABLE
		});
		if (author != member.userKey) {
			// TODO Add grants
			var { data } = sudo member.userKey zpServiceGda.inc({
				column: COLUMN_HISTORY_UNREAD,
				data: 1,
				key: id,
				table: HISTORY_TABLE
			});
			/** Execute all registered macros */
			sudo member.userKey zpRecipeUtils::zpServiceTrigger.trigger({
				event: EVENT__INC_CONVERSATION_UNREAD,
				data: { id, owner, message, unread: data }
			});	
		}
	}
}