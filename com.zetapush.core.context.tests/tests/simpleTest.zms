
zms_test_setup singleUser {
	zms_test_user user1 = auth( {login : @zms.test.login, password : @zms.test.password});
	zms_add_handler(user1, code, 'error', function(result, errors) {
		trace("zms_add_handler for macro errors", errors);
	});
}

zms_test createTest {
	import zms_test_setup singleUser;
	zms_add_handler(user1, contexts::createContext, function(result, errors) {
		trace("zms_add_handler for createContext", result, errors);
		assert coll:size(errors) == 0 "";
		zms_test_success;
	});

	sudo user1 call contexts::createContext( {contextTemplateId : TEMPLATE_CTX_VENTES});
}

zms_test listTest {
	import zms_test_setup singleUser;
	zms_add_handler(user1, contexts::myContexts, function(result, errors) {
		trace("zms_add_handler for myContexts", coll:map(result.contexts, c -> [ {[c.info.contextId] : c.state}]), errors);
		zms_test_success;
	});

	sudo user1 call contexts::myContexts();
}

zms_test transitionTest {
	import zms_test_setup singleUser;
	zms_add_handler(user1, contexts::transitionContext, function(result, errors) {
		trace("zms_add_handler for transitionContext", result, errors);
		zms_test_success;
	});

	sudo user1 call contexts::transitionContext( {contextId : 'p14u0ipkula', newState : VENTES_STATE_SOLD});
}