/**
 *
 */
macroscript core_conversation__onConfirmFileUploadCallback(
	@NotNull map actions,
	@NotNull map file,
	@NotNull service<zpfs_hdfs> zpService
) {
	var { tags, type, name, metadata, creation, url, owner } = file;

	var id = null;

	if (str:len(url.path) > (str:len(CONVERSATION_ATTACHMENTS_PATH) + NUMBER_OF_CHARS_IN_CONVERSATION_ID)) {
		/** Parse file path to get conversation room id */
		id = str:substr(url.path, str:len(CONVERSATION_ATTACHMENTS_PATH), str:len(CONVERSATION_ATTACHMENTS_PATH) + NUMBER_OF_CHARS_IN_CONVERSATION_ID);
		/** Get conversation by attachment */
		var { result: { room } } = call getConversation({
			id,
			owner
		});
		trace(#core_conversation__onConfirmFileUploadCallback, { room });
		/** Add attachment as conversation message */
		var response = call addConversationMessage({
			room,
			type: MESSAGE_TYPE_ATTACHMENT,
			value: {
				guid: url.guid,
				path: str:join('/', room.metadata.attachments, url.guid)
			},
			metadata : {}
		}) hardFail loud;
	}	
} broadcast {
	id
} on channel __selfName

