/**
 *
 */
macroscript core_conversation__createConversationRoomByService(
	/** Valid conversation room id */ @ValidConversationId string id,
	/** Conversation room name */ @NotNull string name,
	/** Conversation room members */ @NotNull array members,
	/** Group service */@NotNull service<groups> zpService
) {
	trace(#core_conversation__createConversationRoomByService, { id, name, members, userKey: __userKey });
	/** Conversation attachments path */
	const path = CONVERSATION_ATTACHMENTS_PATH + id;
	/** Conversation metadata */
	const metadata = {
		type: CORE__CONVERSATION_TYPE_ROOM,
		attachments: path
	};
	/** Create group */
	const { group: room } = await zpRecipeGroup::core_group__createGroupByService({
		id, name, members, metadata, zpService
	});
	trace(#core_conversation__createConversationRoomByService, room);
	/** Set correct room permissions */
	await core_conversation__setConversationPermissionsByServices({
		id, path,
		zpServiceGroups: zpService,
		zpServiceGda: zpServiceGda,
		zpServiceFileSystem: zpRecipeFile::zpServiceFile
	});
	/** Extends room with grants list */
	const { grants } = zpService.listGrants({ group: id });
	room.grants = grants;
} return {
	Room room
} on channel __selfName
