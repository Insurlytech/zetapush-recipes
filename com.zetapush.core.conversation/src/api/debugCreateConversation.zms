macroscript debugCreateConversation(

) {
	var id  =  usr:core_conversation__id();
	var name = 'Yo';
	var members = [];
	var zpService = zpServiceGroups;
	/*
	var { exists } = zpServiceGroups.exists({ group : id });
	if (!exists) {
		zpServiceGroups.createGroup({ group: id, groupName: name });
	}
	var group = zpServiceGroups.groupUsers({ group : id });
	*/
	/*
	var { result: { group: room } } = call zpRecipeGroup::core_group__createGroupByService({
		id, name, members, zpService
	}) hardFail;
	*/
	var { result: { room } } = call core_conversation__createConversationRoomByService({ id, name, members, zpService });
} return {
	room
} on channel __selfName


macroscript validateConversationRoomId(
	@ValidConversationId string id
) {
	
} broadcast {
	id
} on channel __selfName
