/**
 * ZetaPush Official Core Recipe
 * Provide conversations management APIs
 */
recipe com.zetapush.core.conversation 2.0.0;

// Import recipes

import recipe com.zetapush.core.utils 2.0.0 in zpRecipeUtils;
import recipe com.zetapush.core.group 2.0.0 in zpRecipeGroup;
import recipe com.zetapush.core.user 2.0.0 in zpRecipeUser;

// Table

const TABLE_CONVERSATION_STORAGE = 'storage';
const COLUMN_STORAGE_AUTHOR = 'author';
const COLUMN_STORAGE_TYPE = 'type';
const COLUMN_STORAGE_VALUE = 'value';
const COLUMN_STORAGE_CREATED_AT = 'createdAt';
const COLUMN_STORAGE_UPDATED_AT = 'updatedAt';
const COLUMN_STORAGE_METADATA = 'metadata';
const COLUMN_STORAGE_READERS = 'readers';
const COLUMN_STORAGE_TARGETS = 'targets';

const TABLE_CONVERSATION_HISTORY = 'history';
const COLUMN_HISTORY_UNREAD = 'unread';

// File System

const CONVERSATION_ATTACHMENTS_PATH = '/conversation/attachments/';

// Constants

const CORE__CONVERSATION_TYPE_ROOM = 'room';

// Context

const EVENT__ADD_CONVERSATION_MESSAGE = 'ZetaPushEvent__Conversation_AddConversationMessage';
const EVENT__INC_CONVERSATION_UNREAD = 'ZetaPushEvent__Conversation_IncConversationUnread';
const EVENT__CREATE_CONVERSATION = 'ZetaPushEvent__Conversation_CreateConversation';
const EVENT__PURGE_CONVERSATION = 'ZetaPushEvent__Conversation_PurgeConversation';
const EVENT__UPDATE_CONVERSATION_MESSAGE = 'ZetaPushEvent__Conversation_UPdateConversationMessage';

// Conversation Content Type

const MESSAGE_TYPE_ATTACHMENT = 'attachment';
const MESSAGE_TYPE_EVENT = 'event';
const MESSAGE_TYPE_MARKUP = 'markup';
const MESSAGE_TYPE_WIDGET = 'widget';
const MESSAGE_TYPE_ACTION = 'action';

const CONVERSATION_ID_ENTROPY = 32; // --> 32 chars
const CONVERSATION_MESSAGE_ID_ENTROPY = 3; // --> 3 chars

const NUMBER_OF_CHARS_IN_FULL_DATETIMEMS = 17; // Y(2017)m(01)D(01)H(00)M(00)S(00)M(000) ==> 17 characters
const NUMBER_OF_CHARS_IN_CONVERSATION_ID = 32; // ==> 32 chars
const NUMBER_OF_CHARS_IN_CONVERSATION_MESSAGE_SUFFIX = 3; // ==> 3 chars
const NUMBER_OF_CHARS_IN_CONVERSATION_MESSAGE_ID = NUMBER_OF_CHARS_IN_CONVERSATION_ID + NUMBER_OF_CHARS_IN_FULL_DATETIMEMS + NUMBER_OF_CHARS_IN_CONVERSATION_MESSAGE_SUFFIX; // ==> 52

// Services declaration

/**
 * Public API (Client and Server side) macro service
 */
service zpServiceApiMacro = macro(__default) for 'src/api';
/**
 * Private API (Server side only) macro service
 */
service zpServiceImplMacro = macro(zpRecipeUtils::SERVICE_MACRO_IMPL_ID).forbiddenVerbs(__all) for 'src/impl';
/**
 * Conversation group service
 */
service zpServiceGroups = groups('cr_cnvrst_groups').options({
	groups_presence_owner: true,
	groups_presence_group: true
}).forbiddenVerbs(__all);
/**
 * NoSQL Dataservice
 */
service zpServiceGda = gda('cr_cnvrst_gda').forbiddenVerbs(__all);
/**
 * Data Stack service
 */
service zpServiceStack = stack('cr_cnvrst_stack').forbiddenVerbs(__all);
/**
 * File system service
 */
service zpServiceFileSystem = zpfs_hdfs('cr_cnvrst_hdfs').options({
	upload_thumbnails: '100,200,300,400,500,600,700,800,900'
}).forbiddenVerbs(__all);
