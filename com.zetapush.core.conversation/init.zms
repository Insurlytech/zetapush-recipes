/** Create conversation */
zpServiceGda.gda_createTable({
	name: TABLE_CONVERSATION_STORAGE,
	columns: [{
		map: false,
		name: COLUMN_STORAGE_AUTHOR,
		type: GdaDataType_STRING
	}, {
		map: false,
		name: COLUMN_STORAGE_TYPE,
		type: GdaDataType_STRING
	}, {
		map: false,
		name: COLUMN_STORAGE_VALUE,
		type: GdaDataType_OBJECT
	}, {
		map: false,
		name: COLUMN_STORAGE_CREATED_AT,
		type: GdaDataType_LONG
	}, {
		map: false,
		name: COLUMN_STORAGE_UPDATED_AT,
		type: GdaDataType_LONG
	}, {
		map: false,
		name: COLUMN_STORAGE_METADATA,
		type: GdaDataType_OBJECT
	}, {
		map: true,
		name: COLUMN_STORAGE_READERS,
		type: GdaDataType_LONG
	}, {
		map: true,
		name: COLUMN_STORAGE_TARGETS,
		type: GdaDataType_STRING
	}]
});

/** Create history */
zpServiceGda.gda_createTable({
	name: TABLE_CONVERSATION_HISTORY,
	columns: [{
		map: false,
		name: COLUMN_HISTORY_UNREAD,
		type: GdaDataType_LONG
	}]
});

/** Register triggers */
zpRecipeUtils::zpServiceTrigger.trigger_addListener({
	deploymentId: zpRecipeUtils::zpServiceImplMacro,
	parameter : {
		name: #core_conversation__onConfirmFileUploadCallback,
		parameters: TriggerCallbackField_data
	},
	trigger : {
		event: zpRecipeFile::EVENT__CONFIRM_FILE_UPLOAD,
		name: #core_conversation__onConfirmFileUploadCallback
	},
	verb: Verb_macro_func,
	'loud': true
});